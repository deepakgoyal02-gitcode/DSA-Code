public class cityTwoPointNode {
    private String cityName;
    private cityTwoPointNode previous;
    private cityTwoPointNode next;

    cityTwoPointNode(String cityName)
    {
        this.cityName = cityName;
    }

    public void setNext(cityTwoPointNode next) { this.next = next;}

    public void setPrevious(cityTwoPointNode previous) {this.previous = previous; }

    public cityTwoPointNode getNext() { return next; }

    public cityTwoPointNode getPrevious() { return previous; }

    public String toString()
    {
        return cityName;
    }
}
///////////////////////////////////////////////////////////
public class cityDoublyLinkedList
{
        private cityTwoPointNode head;
        private cityTwoPointNode tail;
        int size;

        public void addToFront(cityTwoPointNode passedCityNode)
        {
            cityTwoPointNode node = passedCityNode;
            if(head == null){
                tail = node;
                }
            else {
                head.setPrevious(node);
                node.setNext(head);
                }

            head = node;
            size++;

        }

        public void addToEnd(cityTwoPointNode passedCityNode)
        {
            cityTwoPointNode node = passedCityNode;
            if(tail == null){
                head = node;
            }
            else {
                tail.setNext(node);
                node.setPrevious(tail);
            }

            tail = node;
            size++;
        }

    public cityTwoPointNode removeFromFront() {
        if (isEmpty()) {
            return null;
        }

        cityTwoPointNode removedNode = head;

        if (head.getNext() == null) {
            tail = null;
        }
        else {
            head.getNext().setPrevious(null);
        }

        head = head.getNext();
        size--;
        removedNode.setNext(null);
        return removedNode;
    }

    public cityTwoPointNode removeFromEnd() {
        if (isEmpty()) {
            return null;
        }

        cityTwoPointNode removedNode = tail;

        if (tail.getPrevious() == null) {
            head = null;
        }
        else {
            tail.getPrevious().setNext(null);
        }

        tail = tail.getPrevious();
        size--;
        removedNode.setPrevious(null);
        return removedNode;
    }

    public int getSize() {
        return size;
    }

    public boolean isEmpty() {
        return head == null;
    }

    public void printList() {
        cityTwoPointNode current = head;
        System.out.print("head -> ");
        while (current != null) {
            System.out.print(current);
            System.out.print(" <=> ");
            current = current.getNext();
        }
        System.out.println("null");
    }

}
///////////////////////////////////////////////////////////////////////////////////////
public class doublyLinkedListMain {
    public static void main(String[] args) {
        cityTwoPointNode newDelhi = new cityTwoPointNode("New Delhi");
        cityTwoPointNode mumbai = new cityTwoPointNode("Mumbai");
        cityTwoPointNode kolkata = new cityTwoPointNode("kolkata");
        cityTwoPointNode chennai = new cityTwoPointNode("Chennai");
        cityTwoPointNode bangalore = new cityTwoPointNode("Bangalore");
        cityTwoPointNode hyderabad = new cityTwoPointNode("Hyderabad");

        cityDoublyLinkedList cityDoublyList = new  cityDoublyLinkedList();

        cityDoublyList.addToFront(newDelhi);
        cityDoublyList.addToFront(mumbai);
        cityDoublyList.addToFront(kolkata);
        cityDoublyList.addToFront(chennai);
        cityDoublyList.addToFront(bangalore);
        cityDoublyList.addToFront(hyderabad);

        cityDoublyList.printList();


        cityTwoPointNode puneEnd = new cityTwoPointNode("Pune");
        cityDoublyList.addToEnd(puneEnd);
        cityDoublyList.printList();


        cityDoublyList.removeFromFront();
        cityDoublyList.printList();


        cityDoublyList.removeFromEnd();
        cityDoublyList.printList();

    }
}











