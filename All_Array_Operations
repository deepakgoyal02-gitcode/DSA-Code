public class ArrayOperationsMain {
    public static void main(String[] args) {

        int[] a = {22, 33, 44, 55, 66, 77, 88, -1};

        int choice = 0;

        int insertLocation = 1;
        int valueToInsert = 11;

        int deleteLocation = 1;

        switch (choice) {
            case 1:
                arrayTraversal(a);
                break;
            case 2:
                insertAt(a,insertLocation,valueToInsert);
                break;
            case 3:
                deleteAt(a,deleteLocation);
                break;
            case 4:
                System.out.println("search(a, 44): " + lSearch(a, 44));
                System.out.println("search(a, 50): " + bSearch(a, 50));
                break;
            default:
                System.out.println("Invalid Choice");
                break;

        }
    }
    public static void insertAt(int[] passedA, int passedLoc, int passedValueToInsert){
        //assuming there is always an empty space at the end
        for(int i=passedA.length-1;i>=passedLoc;i--)
        {
            passedA[i] = passedA[i-1];
        }
        passedA[passedLoc-1] = passedValueToInsert;
        arrayTraversal(passedA);
    }
    public static void deleteAt(int[] passedA, int passedLoc)
    {
        for(int i = passedLoc;i<passedA.length;i++) {
                passedA[i-1] = passedA[i];
            }
        passedA[passedA.length-1] = -1;
        arrayTraversal(passedA);
    }
    public static int lSearch(int[] a, int x) {
        for (int i = 0; i < a.length; i++) {

            if (a[i] == x) {
                return i;
            }
        }
        return -1;
    }
    public static int bSearch(int[] a, int x) {
        int low = 0;
        int high = a.length;
        while (low < high)
         {
            int i = (low + high)/2;
            if (a[i] == x) {
                    return i;
                }
            else {
                if (a[i] < x) {
                    low = i + 1;
                }
                else {
                    high = i;
                }
            }
         }
        return -1;
    }
    public static void arrayTraversal(int[] passedA) {
        System.out.print("[ ");
        for(int i = 0;i < passedA.length;i++)
        {
            System.out.print(passedA[i]);
            if(!(i== passedA.length-1))
                System.out.print(",");
        }
        System.out.print(" ]");
    }
}
